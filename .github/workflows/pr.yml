name: Primaza Pull Request Build

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [
          { 'version': '17', 'opts': '' }
        ]
    name: build with jdk ${{matrix.java.version}}

    steps:
      - uses: actions/checkout@v2
        name: checkout

      - uses: actions/setup-java@v2
        name: set up jdk ${{matrix.java.version}}
        with:
          distribution: temurin
          java-version: ${{matrix.java.version}}
          cache: maven

      - name: build with maven
        run: mvn clean install

  verify-in-kubernetes:
    name: Verify in Kubernetes
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          check-latest: true
          cache: 'maven'

      - name: Kubernetes KinD Cluster
        uses: container-tools/kind-action@v1
        with:
          version: v0.11.1
          registry: true

      - name: Start Helm Repository (ChartMuseum)
        run: docker run --rm -u 0 -it -d -p 8080:8080 -e DEBUG=1 -e STORAGE=local -e STORAGE_LOCAL_ROOTDIR=/charts -v $(pwd)/charts:/charts chartmuseum/chartmuseum:latest

      - name: Verify ServiceBox
        run: |
          K8S_NAMESPACE=sb
          KIND_REGISTRY_GROUP=local
          VERSION=latest
          kubectl create namespace $K8S_NAMESPACE
          kubectl config set-context --current --namespace=$K8S_NAMESPACE

          mvn clean install -DskipTests -Ppush-images,kubernetes -Dquarkus.container-image.build=true \
            -Dquarkus.container-image.push=true \
            -Dquarkus.container-image.registry=$KIND_REGISTRY \
            -Dquarkus.container-image.group=$KIND_REGISTRY_GROUP \
            -Dquarkus.container-image.tag=$VERSION \
            -Dquarkus.container-image.insecure=true \
            -Dquarkus.helm.repository.push=true \
            -Dquarkus.helm.repository.url=http://localhost:8080/api/charts \
            -Dquarkus.helm.repository.type=CHARTMUSEUM

          # Install Helm repository
          helm repo add local http://localhost:8080

          # And install application from the Helm repository
          helm install --devel servicebox-app local/servicebox-app -n $K8S_NAMESPACE --set app.image=$KIND_REGISTRY/$KIND_REGISTRY_GROUP/servicebox-app:$VERSION
          kubectl wait --for=condition=ready --timeout=5m pod -l app.kubernetes.io/name=servicebox-app -n $K8S_NAMESPACE

          POD_NAME=$(kubectl get pod -l app.kubernetes.io/name=servicebox-app -n $K8S_NAMESPACE -o name)
          if [ $(kubectl exec -i $POD_NAME --container servicebox-app -n $K8S_NAMESPACE -- sh -c "curl -s -i localhost:8080/home") = *"500 Internal Server Error"* ]
          then
            echo Service Box is not working
            kubectl describe $POD_NAME
            kubectl logs $POD_NAME
            exit 1
          fi